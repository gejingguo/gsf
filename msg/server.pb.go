// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

/*
Package msg is a generated protocol buffer package.

It is generated from these files:
	server.proto

It has these top-level messages:
	ServerInfo
	CmdRegSvrRegReq
	CmdRegSvrRegNtf
*/
package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Cmd int32

const (
	Cmd_Cmd_ID_None   Cmd = 0
	Cmd_RegSvr_RegReq Cmd = 1001
	Cmd_RegSvr_RegNtf Cmd = 1002
)

var Cmd_name = map[int32]string{
	0:    "Cmd_ID_None",
	1001: "RegSvr_RegReq",
	1002: "RegSvr_RegNtf",
}
var Cmd_value = map[string]int32{
	"Cmd_ID_None":   0,
	"RegSvr_RegReq": 1001,
	"RegSvr_RegNtf": 1002,
}

func (x Cmd) String() string {
	return proto.EnumName(Cmd_name, int32(x))
}
func (Cmd) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ServerType int32

const (
	ServerType_ServerType_None  ServerType = 0
	ServerType_ServerType_Reg   ServerType = 1
	ServerType_ServerType_World ServerType = 2
	ServerType_ServerType_Scene ServerType = 3
	ServerType_ServerType_Gate  ServerType = 4
)

var ServerType_name = map[int32]string{
	0: "ServerType_None",
	1: "ServerType_Reg",
	2: "ServerType_World",
	3: "ServerType_Scene",
	4: "ServerType_Gate",
}
var ServerType_value = map[string]int32{
	"ServerType_None":  0,
	"ServerType_Reg":   1,
	"ServerType_World": 2,
	"ServerType_Scene": 3,
	"ServerType_Gate":  4,
}

func (x ServerType) String() string {
	return proto.EnumName(ServerType_name, int32(x))
}
func (ServerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ServerInfo struct {
	Id         int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type       int32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Group      int32 `protobuf:"varint,3,opt,name=group" json:"group,omitempty"`
	ListenAddr int32 `protobuf:"varint,4,opt,name=listenAddr" json:"listenAddr,omitempty"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ServerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ServerInfo) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ServerInfo) GetGroup() int32 {
	if m != nil {
		return m.Group
	}
	return 0
}

func (m *ServerInfo) GetListenAddr() int32 {
	if m != nil {
		return m.ListenAddr
	}
	return 0
}

type CmdRegSvrRegReq struct {
	Server     *ServerInfo `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	ServerType []int32     `protobuf:"varint,2,rep,packed,name=serverType" json:"serverType,omitempty"`
}

func (m *CmdRegSvrRegReq) Reset()                    { *m = CmdRegSvrRegReq{} }
func (m *CmdRegSvrRegReq) String() string            { return proto.CompactTextString(m) }
func (*CmdRegSvrRegReq) ProtoMessage()               {}
func (*CmdRegSvrRegReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CmdRegSvrRegReq) GetServer() *ServerInfo {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *CmdRegSvrRegReq) GetServerType() []int32 {
	if m != nil {
		return m.ServerType
	}
	return nil
}

type CmdRegSvrRegNtf struct {
	Server []*ServerInfo `protobuf:"bytes,2,rep,name=server" json:"server,omitempty"`
}

func (m *CmdRegSvrRegNtf) Reset()                    { *m = CmdRegSvrRegNtf{} }
func (m *CmdRegSvrRegNtf) String() string            { return proto.CompactTextString(m) }
func (*CmdRegSvrRegNtf) ProtoMessage()               {}
func (*CmdRegSvrRegNtf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CmdRegSvrRegNtf) GetServer() []*ServerInfo {
	if m != nil {
		return m.Server
	}
	return nil
}

func init() {
	proto.RegisterType((*ServerInfo)(nil), "msg.ServerInfo")
	proto.RegisterType((*CmdRegSvrRegReq)(nil), "msg.CmdRegSvrRegReq")
	proto.RegisterType((*CmdRegSvrRegNtf)(nil), "msg.CmdRegSvrRegNtf")
	proto.RegisterEnum("msg.Cmd", Cmd_name, Cmd_value)
	proto.RegisterEnum("msg.ServerType", ServerType_name, ServerType_value)
}

func init() { proto.RegisterFile("server.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0x86, 0xdd, 0x76, 0x3f, 0x60, 0x56, 0xb7, 0x61, 0xdc, 0x43, 0x4f, 0x22, 0xbd, 0x28, 0x7b,
	0xe8, 0x41, 0x6f, 0x1e, 0x04, 0xa9, 0x20, 0x7b, 0xe9, 0x21, 0x15, 0x04, 0x2f, 0x45, 0xcd, 0x34,
	0x14, 0xb6, 0x4d, 0x4d, 0x63, 0xc1, 0x9f, 0xac, 0xbf, 0x42, 0x9a, 0x28, 0xed, 0x2e, 0x78, 0x9b,
	0x79, 0xde, 0xf0, 0xe4, 0x25, 0x81, 0xe3, 0x96, 0x74, 0x47, 0x3a, 0x6e, 0xb4, 0x32, 0x0a, 0xfd,
	0xaa, 0x95, 0x51, 0x01, 0x90, 0x59, 0xb8, 0xad, 0x0b, 0x85, 0x2b, 0xf0, 0x4a, 0x11, 0x4e, 0xce,
	0x27, 0x97, 0x33, 0xee, 0x95, 0x02, 0x11, 0xa6, 0xe6, 0xb3, 0xa1, 0xd0, 0xb3, 0xc4, 0xce, 0xb8,
	0x86, 0x99, 0xd4, 0xea, 0xa3, 0x09, 0x7d, 0x0b, 0xdd, 0x82, 0x67, 0x00, 0xbb, 0xb2, 0x35, 0x54,
	0xdf, 0x09, 0xa1, 0xc3, 0xa9, 0x8d, 0x46, 0x24, 0x7a, 0x86, 0x20, 0xa9, 0x04, 0x27, 0x99, 0x75,
	0x9a, 0x93, 0xe4, 0xf4, 0x8e, 0x17, 0x30, 0x77, 0x7d, 0xec, 0x85, 0xcb, 0xab, 0x20, 0xae, 0x5a,
	0x19, 0x0f, 0x6d, 0xf8, 0x6f, 0xdc, 0xbb, 0xdd, 0xf4, 0xe8, 0xba, 0xf8, 0xbd, 0x7b, 0x20, 0xd1,
	0xcd, 0xbe, 0x3b, 0x35, 0xc5, 0xc8, 0xdd, 0x1f, 0xff, 0xdf, 0xbd, 0xb9, 0x05, 0x3f, 0xa9, 0x04,
	0x06, 0xb0, 0x4c, 0x2a, 0x91, 0x6f, 0xef, 0xf3, 0x54, 0xd5, 0xc4, 0x8e, 0x10, 0xe1, 0xc4, 0x09,
	0x73, 0xd7, 0x96, 0x7d, 0x2d, 0xf6, 0x59, 0x6a, 0x0a, 0xf6, 0xbd, 0xd8, 0x74, 0x7f, 0xef, 0xd7,
	0x37, 0xc1, 0x53, 0x08, 0x86, 0x6d, 0x50, 0xad, 0x46, 0x90, 0x93, 0x64, 0x13, 0x5c, 0x03, 0x1b,
	0xb1, 0x27, 0xa5, 0x77, 0x82, 0x79, 0x07, 0x34, 0x7b, 0xa3, 0x9a, 0x98, 0x7f, 0x20, 0x7d, 0x78,
	0x31, 0xc4, 0xa6, 0xaf, 0x73, 0xfb, 0x87, 0xd7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x19, 0x5b,
	0xcc, 0xf4, 0xd3, 0x01, 0x00, 0x00,
}
